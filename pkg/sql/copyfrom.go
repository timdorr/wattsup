// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package sql

import (
	"context"
)

// iteratorForCreateMetrics implements pgx.CopyFromSource.
type iteratorForCreateMetrics struct {
	rows                 []CreateMetricsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateMetrics) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateMetrics) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Time,
		r.rows[0].DeviceID,
		r.rows[0].RegisterAddress,
		r.rows[0].Value,
	}, nil
}

func (r iteratorForCreateMetrics) Err() error {
	return nil
}

func (q *Queries) CreateMetrics(ctx context.Context, arg []CreateMetricsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"metrics"}, []string{"time", "device_id", "register_address", "value"}, &iteratorForCreateMetrics{rows: arg})
}
